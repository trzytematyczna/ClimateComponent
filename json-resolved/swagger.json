{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Climate Component",
    "description" : "This API specification documents the  Climate Change miniproject done as a part of ODYCCEUS EU project. It combines methods for visualizing and analyzing the climate change debate in three media spheres: UK parliament speeches, the Guardian and Twitter. We consider three large-scale datasets spanning from July 2016 to September 2019: 1) For the perspective of social media, a collection of 80M tweets related to climate change (courtesy of The Digital Methods Initiative, Amsterdam) 2) For the perspective of mass media, 4526 articles published by The Guardian (courtesy of the Vrije Universiteit Brussel) 3) For the political debate, a corpus of 92 287 UK parliamentary speeches (courtesy of the Max Planck Institute for Mathematics in the Sciences, Leipzig). All documents in these three corpora have been selected by the use of the keyword \"climate\". For each of the dataset, we identify and observe the dynamics of subtopics over time, employing methods ranging from outlier exploration and topic modeling to network representations. This allows us to investigate the possible existence and dynamics of discursive shifts.",
    "contact" : {
      "email" : "robin.Lamarche-Perrin@lip6.fr"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://penelope.huma-num.fr/tools/"
  } ],
  "tags" : [ {
    "name" : "penelope",
    "description" : "Climate Change operations that satisfy the Penelope requirements"
  } ],
  "paths" : {
    "/climate-data/ping" : {
      "get" : {
        "summary" : " Simple test function.",
        "responses" : {
          "200" : {
            "description" : "operation succeeded"
          }
        }
      }
    },
    "/climate-data/timeline" : {
      "post" : {
        "summary" : "Get temporal evolution of the number of documents and words, optionally dividing them by topic.",
        "parameters" : [ {
          "name" : "corpus",
          "in" : "query",
          "description" : "The list of corpora of interest. Possible values are \"guardian\", \"twitter\", and/or \"uk_parliament\". By default, all three corpora are selected.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/corpusEnum"
          }
        }, {
          "name" : "timescale",
          "in" : "query",
          "description" : "The timescale according to which dates are aggregated. Possible values are \"day\", \"week\", \"month\", or \"year\". Default value is \"week\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/timeEnum"
          }
        }, {
          "name" : "by_topic",
          "in" : "query",
          "description" : "Should the timeline be divided by topic. Default value is \"FALSE\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "doc_ids",
          "in" : "query",
          "description" : "Should document ids be also retrieved. Default value is \"FALSE\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "sample",
          "in" : "query",
          "description" : "Should metadata be extracted from a sample of the three corpora (for testing purposes). Default value is \"FALSE\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of observations, each given the number of documents and words for a given corpus at a given date (optionally, associated to a given topic).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        }
      }
    },
    "/climate-data/topics" : {
      "post" : {
        "summary" : "Get lexical distributions of topics that have been learned on the three corpora.",
        "parameters" : [ {
          "name" : "corpus",
          "in" : "query",
          "description" : "The list of corpora of interest. Possible values are \"guardian\", \"twitter\", and/or \"uk_parliament\". By default, all three corpora are selected.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/corpusEnum"
          }
        }, {
          "name" : "topic",
          "in" : "query",
          "description" : "The list of topics of interest. By default, all topics are selected.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/topicEnum"
          }
        }, {
          "name" : "doc_ids",
          "in" : "query",
          "description" : "Should document ids be also retrieved. Default value is \"FALSE\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "sample",
          "in" : "query",
          "description" : "Should metadata be extracted from a sample of the three corpora (for testing purposes). Default value is \"FALSE\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of observations, each given the lexical distribution of a given topic.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                }
              }
            }
          }
        }
      }
    },
    "/climate-data/metadata" : {
      "post" : {
        "summary" : "(unused) Get metadata from a sample of the three corpora",
        "description" : " Get metadata from a sample of the three corpora according to some structured JSON request describing (1) dimensions of interest (among corpus, author, interactor, date, and topic), (2) eventual filtering and/or aggregation of the elements in these dimensions, (3) variables of interest (among number of documents, of words, of characters, and list of document ids).",
        "parameters" : [ {
          "name" : "req",
          "in" : "query",
          "description" : "A structured JSON request describing what metadata should be retreived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "res  Resulting metadata from the three corpora.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/climate-data/metadata-sample" : {
      "post" : {
        "summary" : "(unused) Get metadata from the three corpora according to some structured JSON request",
        "description" : " Get metadata from the three corpora according to some structured JSON request describing (1) dimensions of interest (among corpus, author, interactor, date, and topic), (2) eventual filtering and/or aggregation of the elements in these dimensions, (3) variables of interest (among number of documents, of words, of characters, and list of document ids).",
        "parameters" : [ {
          "name" : "req",
          "in" : "query",
          "description" : "A structured JSON request describing what metadata should be retreived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "res Resulting metadata from the three corpora.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event-analyzer/events" : {
      "post" : {
        "summary" : "Get timeline of the overall topic probability with additional information signifying the events (defined as higher probability values occuring in x consecuitive days)",
        "description" : " Returns higlighted events defined as document probability higher than event_min_prob lasting at least event_min_length",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/eventsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Returns  input data with additional columns - identifying the rows which belong to highlighted event with x and y-axis values for plotting",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        }
      }
    },
    "/event-analyzer/texts" : {
      "post" : {
        "summary" : "Get metadata including texts (from the original dataset) based on selected doc_ids",
        "description" : "Returns some metadata that the original data consists of - by default it returns only texts and doc_id; if optional parameter is true, the function returns also fields: date, author (for guardian it is guardian article author, for tweeter tweet handle, for uk it is name) and \"additional\" field; additional field consists of one string that concatenates additional metadata that differ depending on corpus (fields in string are QUOTED and COMMA SEPARATED) - for guardian it consists of title, description and topics values from G1 to G10, for UK it consists of discussion title, party, speaker id, and topics values from P1 to P10, for Twitter it consists of user id (authors id), retweetcount, users follower count and topics values from T1 to T9 ; function is made in order to be able to analyze smaller chunks of texts and other additional information incuded in original data, where the selection of the data (date, topic) should be made regarding particular event(s) from /event-analyzer/events",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ids"
            }
          }
        }, {
          "name" : "corpus",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "guardian.", "twitter", "uk_parliament" ]
          }
        }, {
          "name" : "optional",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns metadata that the original data consists of. By default (optional = FALSE) it returns only texts and doc_id. If optional parameter is true, the function returns also fields: date, author (for guardian it is guardian article author, for tweeter the authors tweet handle, for uk it is speaker name) and \"additional\" field. Additional field consists of one string that concatenates additional metadata that differ depending on corpus (fields in string are QUOTED and COMMA SEPARATED). For guardian additional field consists of title, description and topics values from G1 to G10, for UK it consists of discussion title, party, speaker id, and topics values from P1 to P10, for Twitter it consists of user id (authors id), retweetcount, users follower count and topics values from T1 to T9 ; ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_3"
                }
              }
            }
          }
        }
      }
    },
    "/event-analyzer/eventwords" : {
      "post" : {
        "summary" : "(unused) Get most significant words from given texts ",
        "description" : " Function returing most significant words (using tfidf) from given texts (to be used for naming the events from events())",
        "parameters" : [ {
          "name" : "id_text",
          "in" : "query",
          "description" : "filtered data (eg. by date and topic) containing two columns: \"doc_id\" (string, ids of documents), and \"text\" which will be used to get top words using tfidf",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/id_text"
            }
          }
        }, {
          "name" : "top",
          "in" : "query",
          "description" : "number of words (descending importance) to be returned, default 10",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "default" : 10
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of most significant words (using tfidf) from given texts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/topic-analyzer/ping" : {
      "get" : {
        "summary" : " Simple test function.",
        "responses" : {
          "200" : {
            "description" : "OK!"
          }
        }
      }
    },
    "/topic-analyzer/similarity" : {
      "post" : {
        "summary" : " Compute similarity network and similarity groups for a set of topics based on their lexical distributions.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/similarityRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The list of similarity groups, one for each topic.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "matrix" ],
                  "type" : "array",
                  "example" : [ {
                    "network" : [ {
                      "topic1" : "G1",
                      "topic2" : "G10",
                      "divergence" : 60.4112,
                      "similarity" : 0.0166
                    }, {
                      "topic1" : "G1",
                      "topic2" : "G2",
                      "divergence" : 67.6275,
                      "similarity" : 0.0148
                    }, {
                      "topic1" : "G1",
                      "topic2" : "G3",
                      "divergence" : 119.1192,
                      "similarity" : 0.0084
                    }, {
                      "topic1" : "G1",
                      "topic2" : "G4",
                      "divergence" : 28.6757,
                      "similarity" : 0.0349
                    }, {
                      "topic1" : "G1",
                      "topic2" : "G5",
                      "divergence" : 110.76,
                      "similarity" : 0.009
                    }, {
                      "topic1" : "G1",
                      "topic2" : "G6",
                      "divergence" : 23.8549,
                      "similarity" : 0.0419
                    }, {
                      "topic1" : "G1",
                      "topic2" : "G7",
                      "divergence" : 38.9164,
                      "similarity" : 0.0257
                    }, {
                      "topic1" : "G1",
                      "topic2" : "G8",
                      "divergence" : 102.6114,
                      "similarity" : 0.0097
                    }, {
                      "topic1" : "G1",
                      "topic2" : "G9",
                      "divergence" : 118.4965,
                      "similarity" : 0.0084
                    }, {
                      "topic1" : "G1",
                      "topic2" : "P1",
                      "divergence" : 89.046,
                      "similarity" : 0.0112
                    }, {
                      "topic1" : "G1",
                      "topic2" : "P10",
                      "divergence" : 197.0116,
                      "similarity" : 0.0051
                    }, {
                      "topic1" : "G1",
                      "topic2" : "P2",
                      "divergence" : 91.9337,
                      "similarity" : 0.0109
                    }, {
                      "topic1" : "G1",
                      "topic2" : "P3",
                      "divergence" : 101.4663,
                      "similarity" : 0.0099
                    }, {
                      "topic1" : "G1",
                      "topic2" : "P4",
                      "divergence" : 87.1109,
                      "similarity" : 0.0115
                    }, {
                      "topic1" : "G1",
                      "topic2" : "P5",
                      "divergence" : 49.1911,
                      "similarity" : 0.0203
                    }, {
                      "topic1" : "G1",
                      "topic2" : "P6",
                      "divergence" : 98.3856,
                      "similarity" : 0.0102
                    }, {
                      "topic1" : "G1",
                      "topic2" : "P7",
                      "divergence" : 126.9878,
                      "similarity" : 0.0079
                    }, {
                      "topic1" : "G1",
                      "topic2" : "P8",
                      "divergence" : 25.7028,
                      "similarity" : 0.0389
                    }, {
                      "topic1" : "G1",
                      "topic2" : "P9",
                      "divergence" : 188.0701,
                      "similarity" : 0.0053
                    }, {
                      "topic1" : "G1",
                      "topic2" : "T1",
                      "divergence" : 158.0725,
                      "similarity" : 0.0063
                    }, {
                      "topic1" : "G1",
                      "topic2" : "T2",
                      "divergence" : 2.8088,
                      "similarity" : 0.356
                    }, {
                      "topic1" : "G1",
                      "topic2" : "T3",
                      "divergence" : 197.7926,
                      "similarity" : 0.0051
                    }, {
                      "topic1" : "G1",
                      "topic2" : "T4",
                      "divergence" : 92.0776,
                      "similarity" : 0.0109
                    }, {
                      "topic1" : "G1",
                      "topic2" : "T5",
                      "divergence" : 615.9469,
                      "similarity" : 0.0016
                    }, {
                      "topic1" : "G1",
                      "topic2" : "T6",
                      "divergence" : 154.8071,
                      "similarity" : 0.0065
                    }, {
                      "topic1" : "G1",
                      "topic2" : "T7",
                      "divergence" : 23.374,
                      "similarity" : 0.0428
                    }, {
                      "topic1" : "G1",
                      "topic2" : "T8",
                      "divergence" : 172.901,
                      "similarity" : 0.0058
                    }, {
                      "topic1" : "G1",
                      "topic2" : "T9",
                      "divergence" : 94.5074,
                      "similarity" : 0.0106
                    } ]
                  } ],
                  "items" : {
                    "$ref" : "#/components/schemas/inline_response_200_4"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/topic-analyzer/specificity" : {
      "post" : {
        "summary" : " Compute specificity 2D map for a set of topics based on their lexical distributions using Principal Component Analysis (PCA).",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/specificityRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The list of topics coordinates in the 2D map. response words The list of words coordinates in the 2D map.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "topics" ],
                  "type" : "array",
                  "example" : [ {
                    "topic" : "G1",
                    "corpus" : "guardian",
                    "doc_nb" : 593.1761,
                    "word_nb" : 467237.6,
                    "dim_x" : 35.9814,
                    "dim_y" : -25.1276
                  }, {
                    "topic" : "G10",
                    "corpus" : "guardian",
                    "doc_nb" : 549.1506,
                    "word_nb" : 564816.9,
                    "dim_x" : 30.7015,
                    "dim_y" : 33.4803
                  }, {
                    "topic" : "G2",
                    "corpus" : "guardian",
                    "doc_nb" : 528.0165,
                    "word_nb" : 416729.2,
                    "dim_x" : -8.8458,
                    "dim_y" : -19.028
                  } ],
                  "items" : {
                    "$ref" : "#/components/schemas/inline_response_200_5"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "corpusEnum" : {
        "type" : "array",
        "description" : "The list of corpora of interest. Possible values are \"guardian\", \"twitter\", and/or \"uk_parliament\". By default, all three corpora are selected.",
        "example" : "guardian",
        "items" : {
          "maxItems" : 3,
          "minItems" : 1,
          "type" : "string",
          "enum" : [ "guardian", "twitter", "uk_parliament" ]
        }
      },
      "topicEnum" : {
        "pattern" : "^[P|T|G][0-9]*$",
        "type" : "string",
        "example" : "G10"
      },
      "timeEnum" : {
        "type" : "string",
        "default" : "week",
        "enum" : [ "day", "week", "month", "year" ]
      },
      "eventsRequest" : {
        "required" : [ "timeline" ],
        "type" : "object",
        "properties" : {
          "timeline" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/eventsRequest_timeline"
            }
          },
          "event_min_length" : {
            "type" : "integer",
            "description" : "Minimum duration of the event in units in accordance with the aggregation unit of the input data (day/week/month)",
            "default" : 2
          },
          "event_min_prob" : {
            "type" : "number",
            "description" : "Minimum probability that above which event is defined",
            "format" : "double",
            "default" : 0.12
          },
          "trends" : {
            "type" : "boolean",
            "description" : "If TRUE additional column signifying trend is added to results"
          },
          "trendthreshold" : {
            "type" : "number",
            "format" : "double",
            "default" : 0.02
          }
        }
      },
      "similarityRequest" : {
        "required" : [ "topics" ],
        "type" : "object",
        "properties" : {
          "topics" : {
            "type" : "array",
            "description" : "An array of observations, each giving the lexical distribution of a given topic (see /climate-data/topics).",
            "example" : [ {
              "corpus" : "guardian",
              "topic" : "G1",
              "doc_nb" : 593.1761,
              "word_nb" : 467237.6,
              "word_dist" : "ice 0.013221929 sea 0.0123077897 year 0.0103128713 temperatures 0.009060691 weather 0.0079418227"
            }, {
              "corpus" : "guardian",
              "topic" : "G10",
              "doc_nb" : 549.1506,
              "word_nb" : 564816.9,
              "word_dist" : "people 0.0161365791 world 0.0072241654"
            } ],
            "items" : {
              "type" : "string",
              "properties" : {
                "corpus" : {
                  "$ref" : "#/components/schemas/corpusEnum"
                },
                "topic" : {
                  "$ref" : "#/components/schemas/topicEnum"
                },
                "doc_nb" : {
                  "type" : "number",
                  "format" : "double"
                },
                "word_nb" : {
                  "type" : "number",
                  "format" : "double"
                },
                "word_dist" : {
                  "type" : "object"
                }
              }
            }
          },
          "grouping_threshold" : {
            "type" : "number",
            "description" : "The quantile of links to remove from the network, depending on their similarity score, before computing the similarity groups. Default value is 0.",
            "format" : "double",
            "default" : 0
          }
        }
      },
      "specificityRequest" : {
        "required" : [ "topics" ],
        "type" : "object",
        "properties" : {
          "topics" : {
            "type" : "array",
            "description" : "An array of observations, each giving the lexical distribution of a given topic (see /climate-data/topics).",
            "example" : [ {
              "corpus" : "guardian",
              "topic" : "G1",
              "doc_nb" : 593.1761,
              "word_nb" : 467237.6,
              "word_dist" : "ice 0.013221929 sea 0.0123077897 year 0.0103128713 temperatures 0.009060691 weather 0.0079418227"
            }, {
              "corpus" : "guardian",
              "topic" : "G10",
              "doc_nb" : 549.1506,
              "word_nb" : 564816.9,
              "word_dist" : "people 0.0161365791 world 0.0072241654"
            } ],
            "items" : {
              "type" : "string",
              "properties" : {
                "corpus" : {
                  "$ref" : "#/components/schemas/corpusEnum"
                },
                "topic" : {
                  "type" : "string"
                },
                "doc_nb" : {
                  "type" : "number",
                  "format" : "double"
                },
                "word_nb" : {
                  "type" : "number",
                  "format" : "double"
                },
                "word_dist" : {
                  "type" : "object"
                }
              }
            }
          },
          "dim_x" : {
            "type" : "number",
            "description" : "Dimension of the PCA which should be used for the x-axis. Default value is 1.",
            "format" : "double",
            "default" : 1
          },
          "dim_y" : {
            "type" : "number",
            "description" : "Dimension of the PCA which should be used for the y-axis. Default value is 2.",
            "format" : "double",
            "default" : 2
          }
        }
      },
      "inline_response_200" : {
        "required" : [ "timeline" ],
        "type" : "object",
        "properties" : {
          "timeline" : {
            "type" : "array",
            "example" : [ {
              "corpus" : "guardian",
              "date" : "2016-01",
              "topic" : "G1",
              "doc_nb" : 15.1291,
              "word_nb" : 10011.8429
            }, {
              "corpus" : "guardian",
              "date" : "2016-01",
              "topic" : "G2",
              "doc_nb" : 15.2703,
              "word_nb" : 10523.2401
            } ],
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_timeline"
            }
          }
        }
      },
      "inline_response_200_1" : {
        "required" : [ "topics" ],
        "type" : "object",
        "properties" : {
          "topics" : {
            "type" : "array",
            "example" : [ {
              "corpus" : "guardian",
              "topic" : "G1",
              "doc_nb" : 593.1761,
              "word_nb" : 467237.6,
              "word_dist" : "ice 0.013221929 sea 0.0123077897 year 0.0103128713 temperatures 0.009060691 weather 0.0079418227"
            }, {
              "corpus" : "guardian",
              "topic" : "G10",
              "doc_nb" : 549.1506,
              "word_nb" : 564816.9,
              "word_dist" : "people 0.0161365791 world 0.0072241654"
            } ],
            "items" : {
              "type" : "string",
              "properties" : {
                "corpus" : {
                  "$ref" : "#/components/schemas/corpusEnum"
                },
                "topic" : {
                  "$ref" : "#/components/schemas/topicEnum"
                },
                "doc_nb" : {
                  "type" : "number",
                  "format" : "double"
                },
                "word_nb" : {
                  "type" : "number",
                  "format" : "double"
                },
                "word_dist" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "inline_response_200_2" : {
        "required" : [ "result" ],
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "array",
            "example" : [ {
              "corpus" : "guardian",
              "date" : "2017-01",
              "topic" : "G1",
              "doc_nb" : "0.0561",
              "word_nb" : "49.6732",
              "x_axis_index" : 1,
              "y_axis_sumarized_prob" : 0.0187,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932
            }, {
              "corpus" : "guardian",
              "date" : "2017-02",
              "topic" : "G1",
              "doc_nb" : "0.616",
              "word_nb" : "251.1377",
              "x_axis_index" : 2,
              "y_axis_sumarized_prob" : 0.2053,
              "x_seg_start" : 2,
              "x_seg_end" : 3,
              "y_seg_start" : 2.0E-4,
              "y_seg_end" : 0.2429,
              "seg_len" : 2,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932,
              "diff" : 0.0998,
              "trend" : "up"
            }, {
              "corpus" : "guardian",
              "date" : "2017-03",
              "topic" : "G1",
              "doc_nb" : "2e-04",
              "word_nb" : "0.2195",
              "x_axis_index" : 3,
              "y_axis_sumarized_prob" : 2.0E-4,
              "x_seg_start" : 2,
              "x_seg_end" : 3,
              "y_seg_start" : 2.0E-4,
              "y_seg_end" : 0.2429,
              "seg_len" : 2,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932,
              "diff" : -0.2051,
              "trend" : "down"
            }, {
              "corpus" : "guardian",
              "date" : "2017-04",
              "topic" : "G1",
              "doc_nb" : "0.0541",
              "word_nb" : "63.7202",
              "x_axis_index" : 4,
              "y_axis_sumarized_prob" : 0.0541,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932
            }, {
              "corpus" : "guardian",
              "date" : "2017-05",
              "topic" : "G1",
              "doc_nb" : "0.1129",
              "word_nb" : "117.553",
              "x_axis_index" : 5,
              "y_axis_sumarized_prob" : 0.0376,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932
            }, {
              "corpus" : "guardian",
              "date" : "2017-06",
              "topic" : "G1",
              "doc_nb" : "0.7643",
              "word_nb" : "909.2848",
              "x_axis_index" : 6,
              "y_axis_sumarized_prob" : 0.1911,
              "x_seg_start" : 6,
              "x_seg_end" : 10,
              "y_seg_start" : 2.0E-4,
              "y_seg_end" : 0.2429,
              "seg_len" : 5,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932,
              "diff" : 0.0855,
              "trend" : "up"
            }, {
              "corpus" : "guardian",
              "date" : "2017-09",
              "topic" : "G1",
              "doc_nb" : "0.6616",
              "word_nb" : "368.3107",
              "x_axis_index" : 7,
              "y_axis_sumarized_prob" : 0.1323,
              "x_seg_start" : 6,
              "x_seg_end" : 10,
              "y_seg_start" : 2.0E-4,
              "y_seg_end" : 0.2429,
              "seg_len" : 5,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932,
              "diff" : -0.0587,
              "trend" : "down"
            }, {
              "corpus" : "guardian",
              "date" : "2017-10",
              "topic" : "G1",
              "doc_nb" : "0.3236",
              "word_nb" : "311.7364",
              "x_axis_index" : 8,
              "y_axis_sumarized_prob" : 0.1618,
              "x_seg_start" : 6,
              "x_seg_end" : 10,
              "y_seg_start" : 2.0E-4,
              "y_seg_end" : 0.2429,
              "seg_len" : 5,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932,
              "diff" : 0.0295,
              "trend" : "up"
            }, {
              "corpus" : "guardian",
              "date" : "2017-11",
              "topic" : "G1",
              "doc_nb" : "0.2429",
              "word_nb" : "498.6833",
              "x_axis_index" : 9,
              "y_axis_sumarized_prob" : 0.2429,
              "x_seg_start" : 6,
              "x_seg_end" : 10,
              "y_seg_start" : 2.0E-4,
              "y_seg_end" : 0.2429,
              "seg_len" : 5,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932,
              "diff" : 0.0811,
              "trend" : "up"
            }, {
              "corpus" : "guardian",
              "date" : "2017-12",
              "topic" : "G1",
              "doc_nb" : "0.0461",
              "word_nb" : "112.1229",
              "x_axis_index" : 10,
              "y_axis_sumarized_prob" : 0.0115,
              "x_seg_start" : 6,
              "x_seg_end" : 10,
              "y_seg_start" : 2.0E-4,
              "y_seg_end" : 0.2429,
              "seg_len" : 5,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932,
              "diff" : -0.2314,
              "trend" : "down"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_2_result"
            }
          }
        }
      },
      "ids" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ids"
        }
      },
      "inline_response_200_3" : {
        "required" : [ "result" ],
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_3_result"
            }
          }
        }
      },
      "id_text" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/id_text"
        }
      },
      "topicanalyzersimilarity_network" : {
        "properties" : {
          "topic1" : {
            "$ref" : "#/components/schemas/topicEnum"
          },
          "topic2" : {
            "$ref" : "#/components/schemas/topicEnum"
          },
          "divergence" : {
            "type" : "number",
            "format" : "double"
          },
          "similarity" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "inline_response_200_4" : {
        "properties" : {
          "network" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/topicanalyzersimilarity_network"
            }
          }
        }
      },
      "topicanalyzerspecificity_topics" : {
        "properties" : {
          "topic" : {
            "$ref" : "#/components/schemas/topicEnum"
          },
          "corpus" : {
            "$ref" : "#/components/schemas/corpusEnum"
          },
          "doc_nb" : {
            "type" : "number",
            "format" : "double"
          },
          "word_nb" : {
            "type" : "number",
            "format" : "double"
          },
          "dim_x" : {
            "type" : "number",
            "format" : "double"
          },
          "dim_y" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "inline_response_200_5" : {
        "properties" : {
          "topics" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/topicanalyzerspecificity_topics"
            }
          }
        }
      },
      "eventsRequest_timeline" : {
        "properties" : {
          "corpus" : {
            "$ref" : "#/components/schemas/corpusEnum"
          },
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "topic" : {
            "$ref" : "#/components/schemas/topicEnum"
          },
          "doc_nb" : {
            "type" : "number",
            "format" : "double"
          },
          "word_nb" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "inline_response_200_timeline" : {
        "properties" : {
          "corpus" : {
            "$ref" : "#/components/schemas/corpusEnum"
          },
          "date" : {
            "type" : "string",
            "description" : "date",
            "format" : "date"
          },
          "topic" : {
            "$ref" : "#/components/schemas/topicEnum"
          },
          "doc_nb" : {
            "type" : "number",
            "format" : "double"
          },
          "word_nb" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "inline_response_200_2_result" : {
        "properties" : {
          "corpus" : {
            "$ref" : "#/components/schemas/corpusEnum"
          },
          "topic" : {
            "$ref" : "#/components/schemas/topicEnum"
          },
          "doc_nb" : {
            "type" : "number",
            "format" : "double"
          },
          "word_nb" : {
            "type" : "number",
            "format" : "double"
          },
          "x_axis_index" : {
            "type" : "integer",
            "description" : "x position of plot probability (has value only if line includes event, otherwise NA)"
          },
          "y_axis_index" : {
            "type" : "integer",
            "description" : "y position of plot probability (has value only if line includes event, otherwise NA)"
          },
          "x_seg_start" : {
            "type" : "integer",
            "description" : "start position of the event on x-axis (has value only if line includes event, otherwise NA)"
          },
          "x_seg_end" : {
            "type" : "integer",
            "description" : "end position of the event on x-axis (has value only if line includes event, otherwise NA)"
          },
          "y_seg_start" : {
            "type" : "integer",
            "description" : "start position of the event on y-axis (has value only if line includes event, otherwise NA)"
          },
          "y_seg_end" : {
            "type" : "integer",
            "description" : "end position of the event on y-axis (has value only if line includes event, otherwise NA)"
          },
          "seg_len" : {
            "type" : "integer",
            "description" : "length of the event, event starting in month 2 ending in month 3 have seg_len = 2,  (has value only if line includes event, otherwise NA)"
          },
          "topic_mean" : {
            "type" : "number",
            "description" : "mean proabbility of topic",
            "format" : "double"
          },
          "topic_median" : {
            "type" : "number",
            "description" : "median proabbility of topic",
            "format" : "double"
          },
          "diff" : {
            "type" : "number",
            "description" : "diff has the difference of probability value between previous and current segment, useful for direction of trends evaluation (has value only if line includes event AND if trends option in request was equal to TRUE, otherwise NA)",
            "format" : "double"
          },
          "trends" : {
            "type" : "string",
            "description" : "indiation of trend (up/down/same) for event (has value only if line includes event AND if trends option in request was equal to TRUE, otherwise NA)",
            "enum" : [ "up", "down", "same" ]
          }
        }
      },
      "inline_response_200_3_result" : {
        "properties" : {
          "doc_id" : {
            "type" : "string"
          },
          "text" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string",
            "description" : "exists if optional = TRUE",
            "format" : "date"
          },
          "author" : {
            "type" : "string",
            "description" : "exists if optional = TRUE"
          },
          "additional" : {
            "type" : "string",
            "description" : "exists if optional = TRUE"
          }
        }
      }
    },
    "responses" : {
      "timelineResponse" : {
        "description" : "An array of observations, each given the number of documents and words for a given corpus at a given date (optionally, associated to a given topic).",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_200"
            }
          }
        }
      },
      "topicsResponse" : {
        "description" : "An array of observations, each given the lexical distribution of a given topic.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_200_1"
            }
          }
        }
      },
      "eventsResponse" : {
        "description" : "Returns  input data with additional columns - identifying the rows which belong to highlighted event with x and y-axis values for plotting",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_200_2"
            }
          }
        }
      },
      "textsResponse" : {
        "description" : "Returns metadata that the original data consists of. By default (optional = FALSE) it returns only texts and doc_id. If optional parameter is true, the function returns also fields: date, author (for guardian it is guardian article author, for tweeter the authors tweet handle, for uk it is speaker name) and \"additional\" field. Additional field consists of one string that concatenates additional metadata that differ depending on corpus (fields in string are QUOTED and COMMA SEPARATED). For guardian additional field consists of title, description and topics values from G1 to G10, for UK it consists of discussion title, party, speaker id, and topics values from P1 to P10, for Twitter it consists of user id (authors id), retweetcount, users follower count and topics values from T1 to T9 ; ",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_200_3"
            }
          }
        }
      },
      "similarityResponse" : {
        "description" : "The list of similarity groups, one for each topic.",
        "content" : {
          "application/json" : {
            "schema" : {
              "required" : [ "matrix" ],
              "type" : "array",
              "example" : [ {
                "network" : [ {
                  "topic1" : "G1",
                  "topic2" : "G10",
                  "divergence" : 60.4112,
                  "similarity" : 0.0166
                }, {
                  "topic1" : "G1",
                  "topic2" : "G2",
                  "divergence" : 67.6275,
                  "similarity" : 0.0148
                }, {
                  "topic1" : "G1",
                  "topic2" : "G3",
                  "divergence" : 119.1192,
                  "similarity" : 0.0084
                }, {
                  "topic1" : "G1",
                  "topic2" : "G4",
                  "divergence" : 28.6757,
                  "similarity" : 0.0349
                }, {
                  "topic1" : "G1",
                  "topic2" : "G5",
                  "divergence" : 110.76,
                  "similarity" : 0.009
                }, {
                  "topic1" : "G1",
                  "topic2" : "G6",
                  "divergence" : 23.8549,
                  "similarity" : 0.0419
                }, {
                  "topic1" : "G1",
                  "topic2" : "G7",
                  "divergence" : 38.9164,
                  "similarity" : 0.0257
                }, {
                  "topic1" : "G1",
                  "topic2" : "G8",
                  "divergence" : 102.6114,
                  "similarity" : 0.0097
                }, {
                  "topic1" : "G1",
                  "topic2" : "G9",
                  "divergence" : 118.4965,
                  "similarity" : 0.0084
                }, {
                  "topic1" : "G1",
                  "topic2" : "P1",
                  "divergence" : 89.046,
                  "similarity" : 0.0112
                }, {
                  "topic1" : "G1",
                  "topic2" : "P10",
                  "divergence" : 197.0116,
                  "similarity" : 0.0051
                }, {
                  "topic1" : "G1",
                  "topic2" : "P2",
                  "divergence" : 91.9337,
                  "similarity" : 0.0109
                }, {
                  "topic1" : "G1",
                  "topic2" : "P3",
                  "divergence" : 101.4663,
                  "similarity" : 0.0099
                }, {
                  "topic1" : "G1",
                  "topic2" : "P4",
                  "divergence" : 87.1109,
                  "similarity" : 0.0115
                }, {
                  "topic1" : "G1",
                  "topic2" : "P5",
                  "divergence" : 49.1911,
                  "similarity" : 0.0203
                }, {
                  "topic1" : "G1",
                  "topic2" : "P6",
                  "divergence" : 98.3856,
                  "similarity" : 0.0102
                }, {
                  "topic1" : "G1",
                  "topic2" : "P7",
                  "divergence" : 126.9878,
                  "similarity" : 0.0079
                }, {
                  "topic1" : "G1",
                  "topic2" : "P8",
                  "divergence" : 25.7028,
                  "similarity" : 0.0389
                }, {
                  "topic1" : "G1",
                  "topic2" : "P9",
                  "divergence" : 188.0701,
                  "similarity" : 0.0053
                }, {
                  "topic1" : "G1",
                  "topic2" : "T1",
                  "divergence" : 158.0725,
                  "similarity" : 0.0063
                }, {
                  "topic1" : "G1",
                  "topic2" : "T2",
                  "divergence" : 2.8088,
                  "similarity" : 0.356
                }, {
                  "topic1" : "G1",
                  "topic2" : "T3",
                  "divergence" : 197.7926,
                  "similarity" : 0.0051
                }, {
                  "topic1" : "G1",
                  "topic2" : "T4",
                  "divergence" : 92.0776,
                  "similarity" : 0.0109
                }, {
                  "topic1" : "G1",
                  "topic2" : "T5",
                  "divergence" : 615.9469,
                  "similarity" : 0.0016
                }, {
                  "topic1" : "G1",
                  "topic2" : "T6",
                  "divergence" : 154.8071,
                  "similarity" : 0.0065
                }, {
                  "topic1" : "G1",
                  "topic2" : "T7",
                  "divergence" : 23.374,
                  "similarity" : 0.0428
                }, {
                  "topic1" : "G1",
                  "topic2" : "T8",
                  "divergence" : 172.901,
                  "similarity" : 0.0058
                }, {
                  "topic1" : "G1",
                  "topic2" : "T9",
                  "divergence" : 94.5074,
                  "similarity" : 0.0106
                } ]
              } ],
              "items" : {
                "$ref" : "#/components/schemas/inline_response_200_4"
              }
            }
          }
        }
      },
      "specificityResponse" : {
        "description" : "The list of topics coordinates in the 2D map. response words The list of words coordinates in the 2D map.",
        "content" : {
          "application/json" : {
            "schema" : {
              "required" : [ "topics" ],
              "type" : "array",
              "example" : [ {
                "topic" : "G1",
                "corpus" : "guardian",
                "doc_nb" : 593.1761,
                "word_nb" : 467237.6,
                "dim_x" : 35.9814,
                "dim_y" : -25.1276
              }, {
                "topic" : "G10",
                "corpus" : "guardian",
                "doc_nb" : 549.1506,
                "word_nb" : 564816.9,
                "dim_x" : 30.7015,
                "dim_y" : 33.4803
              }, {
                "topic" : "G2",
                "corpus" : "guardian",
                "doc_nb" : 528.0165,
                "word_nb" : 416729.2,
                "dim_x" : -8.8458,
                "dim_y" : -19.028
              } ],
              "items" : {
                "$ref" : "#/components/schemas/inline_response_200_5"
              }
            }
          }
        }
      }
    }
  }
}