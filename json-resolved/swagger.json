{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Climate Component",
    "description" : "This API specification documents the  Climate Change miniproject done as a part of ODYCCEUS EU project. It combines methods for visualizing and analyzing the climate change debate in three media spheres: UK parliament speeches, the Guardian and Twitter.",
    "contact" : {
      "email" : "asd@asd.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://penelope.huma-num.fr/tools/"
  } ],
  "tags" : [ {
    "name" : "penelope",
    "description" : "Climate Change operations that satisfy the Penelope requirements"
  } ],
  "paths" : {
    "/climate-data/ping" : {
      "get" : {
        "summary" : " Simple test function.",
        "responses" : {
          "200" : {
            "description" : "operation succeeded"
          }
        }
      }
    },
    "/climate-data/timeline" : {
      "post" : {
        "summary" : "Get temporal evolution of the number of documents and words, optionally dividing them by topic.",
        "description" : "asd",
        "parameters" : [ {
          "name" : "corpus",
          "in" : "query",
          "description" : "The list of corpora of interest. Possible values are \"guardian\", \"twitter\", and/or \"uk_parliament\". By default, all three corpora are selected.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/CorpusEnum"
          }
        }, {
          "name" : "timescale",
          "in" : "query",
          "description" : "The timescale according to which dates are aggregated. Possible values are \"day\", \"week\", \"month\", or \"year\". Default value is \"week\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/timelineTimescaleQuery"
          }
        }, {
          "name" : "by_topic",
          "in" : "query",
          "description" : "Should the timeline be divided by topic. Default value is \"FALSE\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "doc_ids",
          "in" : "query",
          "description" : "Should document ids be also retrieved. Default value is \"FALSE\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "sample",
          "in" : "query",
          "description" : "Should metadata be extracted from a sample of the three corpora (for testing purposes). Default value is \"FALSE\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of observations, each given the number of documents and words for a given corpus at a given date (optionally, associated to a given topic).",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        }
      }
    },
    "/climate-data/topics" : {
      "post" : {
        "summary" : "Get lexical distributions of topics that have been learned on the three corpora.",
        "parameters" : [ {
          "name" : "corpus",
          "in" : "query",
          "description" : "The list of corpora of interest. Possible values are \"guardian\", \"twitter\", and/or \"uk_parliament\". By default, all three corpora are selected.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/CorpusEnum"
          }
        }, {
          "name" : "topic",
          "in" : "query",
          "description" : "The list of topics of interest. By default, all topics are selected.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/topicsTopicQuery"
          }
        }, {
          "name" : "doc_ids",
          "in" : "query",
          "description" : "Should document ids be also retrieved. Default value is \"FALSE\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "sample",
          "in" : "query",
          "description" : "Should metadata be extracted from a sample of the three corpora (for testing purposes). Default value is \"FALSE\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of observations, each given the lexical distribution of a given topic.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                }
              }
            }
          }
        }
      }
    },
    "/climate-data/metadata" : {
      "post" : {
        "summary" : "Get metadata from a sample of the three corpora",
        "description" : " Get metadata from a sample of the three corpora according to some structured JSON request describing (1) dimensions of interest (among corpus, author, interactor, date, and topic), (2) eventual filtering and/or aggregation of the elements in these dimensions, (3) variables of interest (among number of documents, of words, of characters, and list of document ids).",
        "parameters" : [ {
          "name" : "req",
          "in" : "query",
          "description" : "A structured JSON request describing what metadata should be retreived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "res  Resulting metadata from the three corpora.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/climate-data/metadata-sample" : {
      "post" : {
        "summary" : " Get metadata from the three corpora according to some structured JSON request",
        "description" : " Get metadata from the three corpora according to some structured JSON request describing (1) dimensions of interest (among corpus, author, interactor, date, and topic), (2) eventual filtering and/or aggregation of the elements in these dimensions, (3) variables of interest (among number of documents, of words, of characters, and list of document ids).",
        "parameters" : [ {
          "name" : "req",
          "in" : "query",
          "description" : "A structured JSON request describing what metadata should be retreived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "res Resulting metadata from the three corpora.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event-analyzer/events" : {
      "post" : {
        "summary" : "Get timeline with highlited events",
        "description" : " Returns higlighted events defined as document probability higher than event_min_prob lasting at least event_min_length",
        "parameters" : [ {
          "name" : "timeline",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/timeline"
            }
          }
        }, {
          "name" : "event_min_length",
          "in" : "query",
          "description" : "Minimum duration of the event in units in accordance with the aggregation unit of the input data (day/week/month)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "default" : 2
          }
        }, {
          "name" : "event_min_prob",
          "in" : "query",
          "description" : "Minimum probability that above which event is defined",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 0.12
          }
        }, {
          "name" : "trends",
          "in" : "query",
          "description" : "If TRUE additional column signifying trend is added to results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "trendthreshold",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 0.02
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "tdb result$data -  xaxis - index, yaxis - sum_probability, result$avg - horisontal line, result$segments - for a single rectangle xmin=seg_start, xmax=seg_end (x-axis bounds) ymin=min_prob, ymax=max_prob (y-axis bounds )",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          }
        }
      }
    },
    "/event-analyzer/eventwords" : {
      "post" : {
        "summary" : "Get most significant words from given texts",
        "description" : " Function returing most significant words (using tfidf) from given texts (to be used for naming the events from events())",
        "parameters" : [ {
          "name" : "id_text",
          "in" : "query",
          "description" : "data with only doc_id and text already filtered by date and topic",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/eventWordsIdTextQuery"
          }
        }, {
          "name" : "top",
          "in" : "query",
          "description" : "number of words (descending importance) to be returned, default 10",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "default" : 10
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of most significant words (using tfidf) from given texts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/topic-analyzer/ping" : {
      "get" : {
        "summary" : " Simple test function.",
        "responses" : {
          "200" : {
            "description" : "OK!"
          }
        }
      }
    },
    "/topic-analyzer/similarity" : {
      "post" : {
        "summary" : " Compute similarity network and similarity groups for a set of topics based on their lexical distributions.",
        "parameters" : [ {
          "name" : "topics",
          "in" : "query",
          "description" : "An array of observations, each giving the lexical distribution of a given topic (see /climate-data/topics).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "grouping_threshold",
          "in" : "query",
          "description" : "The quantile of links to remove from the network, depending on their similarity score, before computing the similarity groups. Default value is 0.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of similarity groups, one for each topic.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "matrix" ],
                  "type" : "array",
                  "example" : [ {
                    "topic1" : "G1",
                    "topic2" : "G2",
                    "divergence" : 60.4112,
                    "similarity" : 0.0166
                  }, {
                    "topic1" : "G1",
                    "topic2" : "G3",
                    "divergence" : 67.6275,
                    "similarity" : 0.0148
                  }, {
                    "topic1" : "G2",
                    "topic2" : "G3",
                    "divergence" : 119.1192,
                    "similarity" : 0.0084
                  } ],
                  "items" : {
                    "$ref" : "#/components/schemas/inline_response_200_3"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/topic-analyzer/specificity" : {
      "post" : {
        "summary" : " Compute specificity 2D map for a set of topics based on their lexical distributions using Principal Component Analysis (PCA).",
        "parameters" : [ {
          "name" : "topics",
          "in" : "query",
          "description" : "An array of observations, each giving the lexical distribution of a given topic (see /climate-data/topics).",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dim_x",
          "in" : "query",
          "description" : "Dimension of the PCA which should be used for the x-axis. Default value is 1.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 1
          }
        }, {
          "name" : "dim_y",
          "in" : "query",
          "description" : "Dimension of the PCA which should be used for the y-axis. Default value is 2.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "number",
            "format" : "double",
            "default" : 2
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of topics coordinates in the 2D map. response words The list of words coordinates in the 2D map.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "required" : [ "topics" ],
                  "type" : "array",
                  "example" : [ {
                    "topic" : "G1",
                    "corpus" : "guardian",
                    "doc_nb" : 593.1761,
                    "word_nb" : 467237.6,
                    "dim_x" : 35.9814,
                    "dim_y" : -25.1276
                  }, {
                    "topic" : "G10",
                    "corpus" : "guardian",
                    "doc_nb" : 549.1506,
                    "word_nb" : 564816.9,
                    "dim_x" : 30.7015,
                    "dim_y" : 33.4803
                  }, {
                    "topic" : "G2",
                    "corpus" : "guardian",
                    "doc_nb" : 528.0165,
                    "word_nb" : 416729.2,
                    "dim_x" : -8.8458,
                    "dim_y" : -19.028
                  } ],
                  "items" : {
                    "$ref" : "#/components/schemas/inline_response_200_4"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "CorpusEnum" : {
        "type" : "array",
        "example" : "guardian",
        "items" : {
          "maxItems" : 3,
          "minItems" : 1,
          "type" : "string",
          "enum" : [ "guardian", "twitter", "uk_parliament" ]
        }
      },
      "timelineTimescaleQuery" : {
        "type" : "string",
        "default" : "week",
        "enum" : [ "day", "week", "month", "year" ]
      },
      "topicsTopicQuery" : {
        "type" : "string"
      },
      "eventWordsIdTextQuery" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/eventWordsIdTextQuery_inner"
        }
      },
      "inline_response_200" : {
        "required" : [ "timeline" ],
        "type" : "object",
        "properties" : {
          "timeline" : {
            "type" : "array",
            "example" : [ {
              "corpus" : "guardian",
              "date" : "2016-01",
              "topic" : "G1",
              "doc_nb" : 15.1291,
              "word_nb" : 10011.8429
            }, {
              "corpus" : "guardian",
              "date" : "2016-01",
              "topic" : "G2",
              "doc_nb" : 15.2703,
              "word_nb" : 10523.2401
            } ],
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_timeline"
            }
          }
        }
      },
      "inline_response_200_1" : {
        "required" : [ "topics" ],
        "type" : "object",
        "properties" : {
          "timeline" : {
            "type" : "array",
            "example" : [ {
              "corpus" : "guardian",
              "topic" : "G1",
              "doc_nb" : 593.1761,
              "word_nb" : 467237.6,
              "word_dist" : "ice 0.013221929 sea 0.0123077897 year 0.0103128713 temperatures 0.009060691 weather 0.0079418227"
            }, {
              "corpus" : "guardian",
              "topic" : "G10",
              "doc_nb" : 549.1506,
              "word_nb" : 564816.9,
              "word_dist" : "people 0.0161365791 world 0.0072241654"
            } ],
            "items" : {
              "type" : "string",
              "properties" : {
                "corpus" : {
                  "type" : "string",
                  "enum" : [ "guardian", "twitter", "uk_parliament" ]
                },
                "topic" : {
                  "type" : "string"
                },
                "doc_nb" : {
                  "type" : "number",
                  "format" : "double"
                },
                "word_nb" : {
                  "type" : "number",
                  "format" : "double"
                },
                "word_dist" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "timeline" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/timeline"
        }
      },
      "inline_response_200_2" : {
        "required" : [ "result" ],
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "array",
            "example" : [ {
              "corpus" : "guardian",
              "date" : "2017-01",
              "topic" : "G1",
              "doc_nb" : "0.0561",
              "word_nb" : "49.6732",
              "x_axis_index" : 1,
              "y_axis_sumarized_prob" : 0.0187,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932
            }, {
              "corpus" : "guardian",
              "date" : "2017-02",
              "topic" : "G1",
              "doc_nb" : "0.616",
              "word_nb" : "251.1377",
              "x_axis_index" : 2,
              "y_axis_sumarized_prob" : 0.2053,
              "x_seg_start" : 2,
              "x_seg_end" : 3,
              "y_seg_start" : 2.0E-4,
              "y_seg_end" : 0.2429,
              "seg_len" : 2,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932,
              "diff" : 0.0998,
              "trend" : "up"
            }, {
              "corpus" : "guardian",
              "date" : "2017-03",
              "topic" : "G1",
              "doc_nb" : "2e-04",
              "word_nb" : "0.2195",
              "x_axis_index" : 3,
              "y_axis_sumarized_prob" : 2.0E-4,
              "x_seg_start" : 2,
              "x_seg_end" : 3,
              "y_seg_start" : 2.0E-4,
              "y_seg_end" : 0.2429,
              "seg_len" : 2,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932,
              "diff" : -0.2051,
              "trend" : "down"
            }, {
              "corpus" : "guardian",
              "date" : "2017-04",
              "topic" : "G1",
              "doc_nb" : "0.0541",
              "word_nb" : "63.7202",
              "x_axis_index" : 4,
              "y_axis_sumarized_prob" : 0.0541,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932
            }, {
              "corpus" : "guardian",
              "date" : "2017-05",
              "topic" : "G1",
              "doc_nb" : "0.1129",
              "word_nb" : "117.553",
              "x_axis_index" : 5,
              "y_axis_sumarized_prob" : 0.0376,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932
            }, {
              "corpus" : "guardian",
              "date" : "2017-06",
              "topic" : "G1",
              "doc_nb" : "0.7643",
              "word_nb" : "909.2848",
              "x_axis_index" : 6,
              "y_axis_sumarized_prob" : 0.1911,
              "x_seg_start" : 6,
              "x_seg_end" : 10,
              "y_seg_start" : 2.0E-4,
              "y_seg_end" : 0.2429,
              "seg_len" : 5,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932,
              "diff" : 0.0855,
              "trend" : "up"
            }, {
              "corpus" : "guardian",
              "date" : "2017-09",
              "topic" : "G1",
              "doc_nb" : "0.6616",
              "word_nb" : "368.3107",
              "x_axis_index" : 7,
              "y_axis_sumarized_prob" : 0.1323,
              "x_seg_start" : 6,
              "x_seg_end" : 10,
              "y_seg_start" : 2.0E-4,
              "y_seg_end" : 0.2429,
              "seg_len" : 5,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932,
              "diff" : -0.0587,
              "trend" : "down"
            }, {
              "corpus" : "guardian",
              "date" : "2017-10",
              "topic" : "G1",
              "doc_nb" : "0.3236",
              "word_nb" : "311.7364",
              "x_axis_index" : 8,
              "y_axis_sumarized_prob" : 0.1618,
              "x_seg_start" : 6,
              "x_seg_end" : 10,
              "y_seg_start" : 2.0E-4,
              "y_seg_end" : 0.2429,
              "seg_len" : 5,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932,
              "diff" : 0.0295,
              "trend" : "up"
            }, {
              "corpus" : "guardian",
              "date" : "2017-11",
              "topic" : "G1",
              "doc_nb" : "0.2429",
              "word_nb" : "498.6833",
              "x_axis_index" : 9,
              "y_axis_sumarized_prob" : 0.2429,
              "x_seg_start" : 6,
              "x_seg_end" : 10,
              "y_seg_start" : 2.0E-4,
              "y_seg_end" : 0.2429,
              "seg_len" : 5,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932,
              "diff" : 0.0811,
              "trend" : "up"
            }, {
              "corpus" : "guardian",
              "date" : "2017-12",
              "topic" : "G1",
              "doc_nb" : "0.0461",
              "word_nb" : "112.1229",
              "x_axis_index" : 10,
              "y_axis_sumarized_prob" : 0.0115,
              "x_seg_start" : 6,
              "x_seg_end" : 10,
              "y_seg_start" : 2.0E-4,
              "y_seg_end" : 0.2429,
              "seg_len" : 5,
              "topic_mean" : 0.1056,
              "topic_median" : 0.0932,
              "diff" : -0.2314,
              "trend" : "down"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/inline_response_200_2_result"
            }
          }
        }
      },
      "topicanalyzersimilarity_matrix" : {
        "properties" : {
          "topic1" : {
            "type" : "string"
          },
          "topic2" : {
            "type" : "string"
          },
          "divergence" : {
            "type" : "number",
            "format" : "double"
          },
          "similarity" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "inline_response_200_3" : {
        "properties" : {
          "matrix" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/topicanalyzersimilarity_matrix"
            }
          }
        }
      },
      "topicanalyzerspecificity_topics" : {
        "properties" : {
          "topic" : {
            "type" : "string"
          },
          "corpus" : {
            "$ref" : "#/components/schemas/CorpusEnum"
          },
          "doc_nb" : {
            "type" : "number",
            "format" : "double"
          },
          "word_nb" : {
            "type" : "number",
            "format" : "double"
          },
          "dim_x" : {
            "type" : "number",
            "format" : "double"
          },
          "dim_y" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "inline_response_200_4" : {
        "properties" : {
          "topics" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/topicanalyzerspecificity_topics"
            }
          }
        }
      },
      "eventWordsIdTextQuery_inner" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "text" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200_timeline" : {
        "properties" : {
          "corpus" : {
            "type" : "string",
            "enum" : [ "guardian", "twitter", "uk_parliament" ]
          },
          "date" : {
            "type" : "string",
            "description" : "date",
            "format" : "date"
          },
          "topic" : {
            "type" : "string"
          },
          "doc_nb" : {
            "type" : "number",
            "format" : "double"
          },
          "word_nb" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "inline_response_200_2_result" : {
        "properties" : {
          "corpus" : {
            "type" : "string",
            "enum" : [ "guardian", "twitter", "uk_parliament" ]
          },
          "topic" : {
            "type" : "string"
          },
          "doc_nb" : {
            "type" : "number",
            "format" : "double"
          },
          "word_nb" : {
            "type" : "number",
            "format" : "double"
          },
          "x_axis_index" : {
            "type" : "integer",
            "description" : "x position of plot probability (has value only if line includes event, otherwise NA)"
          },
          "y_axis_index" : {
            "type" : "integer",
            "description" : "y position of plot probability (has value only if line includes event, otherwise NA)"
          },
          "x_seg_start" : {
            "type" : "integer",
            "description" : "start position of the event on x-axis (has value only if line includes event, otherwise NA)"
          },
          "x_seg_end" : {
            "type" : "integer",
            "description" : "end position of the event on x-axis (has value only if line includes event, otherwise NA)"
          },
          "y_seg_start" : {
            "type" : "integer",
            "description" : "start position of the event on y-axis (has value only if line includes event, otherwise NA)"
          },
          "y_seg_end" : {
            "type" : "integer",
            "description" : "end position of the event on y-axis (has value only if line includes event, otherwise NA)"
          },
          "seg_len" : {
            "type" : "integer",
            "description" : "length of the event, event starting in month 2 ending in month 3 have seg_len = 2,  (has value only if line includes event, otherwise NA)"
          },
          "topic_mean" : {
            "type" : "number",
            "description" : "mean proabbility of topic",
            "format" : "double"
          },
          "topic_median" : {
            "type" : "number",
            "description" : "median proabbility of topic",
            "format" : "double"
          },
          "diff" : {
            "type" : "number",
            "description" : "diff has the difference of probability value between previous and current segment, useful for direction of trends evaluation (has value only if line includes event AND if trends option in request was equal to TRUE, otherwise NA)",
            "format" : "double"
          },
          "trends" : {
            "type" : "string",
            "description" : "indiation of trend (up/down/same) for event (has value only if line includes event AND if trends option in request was equal to TRUE, otherwise NA)",
            "enum" : [ "up", "down", "same" ]
          }
        }
      }
    },
    "responses" : {
      "timelineResponse" : {
        "description" : "An array of observations, each given the number of documents and words for a given corpus at a given date (optionally, associated to a given topic).",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_200"
            }
          }
        }
      },
      "topicsResponse" : {
        "description" : "An array of observations, each given the lexical distribution of a given topic.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_200_1"
            }
          }
        }
      },
      "eventResponse" : {
        "description" : "tdb result$data -  xaxis - index, yaxis - sum_probability, result$avg - horisontal line, result$segments - for a single rectangle xmin=seg_start, xmax=seg_end (x-axis bounds) ymin=min_prob, ymax=max_prob (y-axis bounds )",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_response_200_2"
            }
          }
        }
      },
      "similarityResponse" : {
        "description" : "The list of similarity groups, one for each topic.",
        "content" : {
          "application/json" : {
            "schema" : {
              "required" : [ "matrix" ],
              "type" : "array",
              "example" : [ {
                "topic1" : "G1",
                "topic2" : "G2",
                "divergence" : 60.4112,
                "similarity" : 0.0166
              }, {
                "topic1" : "G1",
                "topic2" : "G3",
                "divergence" : 67.6275,
                "similarity" : 0.0148
              }, {
                "topic1" : "G2",
                "topic2" : "G3",
                "divergence" : 119.1192,
                "similarity" : 0.0084
              } ],
              "items" : {
                "$ref" : "#/components/schemas/inline_response_200_3"
              }
            }
          }
        }
      },
      "specificityResponse" : {
        "description" : "The list of topics coordinates in the 2D map. response words The list of words coordinates in the 2D map.",
        "content" : {
          "application/json" : {
            "schema" : {
              "required" : [ "topics" ],
              "type" : "array",
              "example" : [ {
                "topic" : "G1",
                "corpus" : "guardian",
                "doc_nb" : 593.1761,
                "word_nb" : 467237.6,
                "dim_x" : 35.9814,
                "dim_y" : -25.1276
              }, {
                "topic" : "G10",
                "corpus" : "guardian",
                "doc_nb" : 549.1506,
                "word_nb" : 564816.9,
                "dim_x" : 30.7015,
                "dim_y" : 33.4803
              }, {
                "topic" : "G2",
                "corpus" : "guardian",
                "doc_nb" : 528.0165,
                "word_nb" : 416729.2,
                "dim_x" : -8.8458,
                "dim_y" : -19.028
              } ],
              "items" : {
                "$ref" : "#/components/schemas/inline_response_200_4"
              }
            }
          }
        }
      }
    }
  }
}